pipeline {
  agent any
  libraries {
    lib('fxtest@1.9')
  }
  options {
    ansiColor('xterm')
    timestamps()
    timeout(time: 5, unit: 'MINUTES')
  }
  environment {
    PYTEST_PROCESSES = "${PYTEST_PROCESSES ?: "auto"}"
    PYTEST_ADDOPTS =
    "-n=${PYTEST_PROCESSES} " +
    "--color=yes"
    PULSE = credentials('PULSE')
  }
  stages {
    stage('Lint') {
      steps {
        sh "tox -c tests/tox.ini -e flake8"
      }
    }
    stage('Test') {
      steps {
        sh "tox -c tests/tox.ini -e py27"
      }
      post {
        always {
          archiveArtifacts 'tests/results/*'
          junit 'tests/results/*.xml'
          submitToActiveData('tests/results/py27_raw.txt')
          submitToTreeherder('snippets-service', 'e2e', 'End-to-end integration tests', 'tests/results/*', 'tests/results/py27_tbpl.txt')
        }
      }
    }
  }
  post {
    failure {
      emailext(
        attachLog: true,
        attachmentsPattern: 'tests/results/py27.html',
        body: '$BUILD_URL\n\n$FAILED_TESTS',
        replyTo: '$DEFAULT_REPLYTO',
        subject: '$DEFAULT_SUBJECT',
        to: '$DEFAULT_RECIPIENTS')
    }
    changed {
      ircNotification('#snippets')
      ircNotification('#fx-test-alerts')
    }
  }
}
